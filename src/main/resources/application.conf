akka.persistence.journal.plugin = "akka.persistence.journal.leveldb-shared"
akka.persistence.journal.leveldb-shared.store.dir = "shared-store"
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.snapshot-store.local.dir = "target/snapshots"
akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "cluster"
  }

  discovery {
    # pick the discovery method you'd like to use:
    method = kubernetes-api

    kubernetes-api {
      #pod-namespace = "default"
      pod-label-selector = ""
      #pod-port-name = "akka-mgmt-http"
    }
  }

  management {
    http {
      port = 8558
    }

    cluster.bootstrap {

      contact-point-discovery {
        service-name = "web-service"
        service-namespace = "default.svc.cluster.local"
        stable-margin = 5 seconds
      }

      contact-point {
        # currently this port HAS TO be the same as the `akka.management.http.port`
        # it would not have to be once we implement the SRV record watching, since then we could potentially
        # get the ports from the DNS records.
        fallback-port = 8558
        no-seeds-stable-margin = 5 seconds
      }
    }
  }

}